{
  "title" : "Minecraft Advancements Schema",
  "description" : "JSON Schema for Advancements in Minecraft: Java Edition",
  "type": "object",
  "definitions": {
    "prop-display": {
      "type": "object",
      "properties": {
        "icon": {
          "type": "object",
          "$ref": "#/definitions/prop-icon"
        },
        "title": {
          "oneOf": [
            {
              "type": "string",
              "description": "plaintext title"
            },
            {
              "type": "object",
              "description": "chat component",
              "$ref" : "#/definitions/chatcomponent"
            }
          ]
        },
        "frame": {
          "type": "string",
          "enum": ["challenge", "goal", "task"],
          "default": "task"
        },
        "background": {
          "type": "string",
          "pattern": ""
        },
        "description": {
          "oneOf": [
            {
              "type": "string",
              "description": "plaintext title"
            },
            {
              "type": "object",
              "description": "chat component",
              "$ref" : "#/definitions/chatcomponent"
            }
          ]
        },
        "show_toast": {
          "type": "boolean",
          "enum": [true, false],
          "default": true
        },
        "announce_to_chat": {
          "type": "boolean",
          "enum": [true, false],
          "default": true
        },
        "hidden": {
          "type": "boolean",
          "enum": [true, false],
          "default": false
        }
      }
    },
    "prop-icon": {
      "type": "object",
      "properties": {
        "item": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "prop-criteria": {
      "type": "object",
      "__comment__": "We don't know what key's name is, so use it",
      "additionalProperties": {
        "type": "object",
        "$ref": "#/definitions/prop-trigger"
      }
    },
    "prop-trigger": {
      "type": "object",
      "properties": {
        "trigger": {
          "type": "string",
          "$ref": "#/definitions/namespace",
          "enum": [
            "minecraft:bee_nest_destroyed",
            "minecraft:bred_animals",
            "minecraft:brewed_potion",
            "minecraft:changed_dimension",
            "minecraft:channeled_lightning",
            "minecraft:construct_beacon",
            "minecraft:consume_item",
            "minecraft:cured_zombie_villager",
            "minecraft:effects_changed",
            "minecraft:enchanted_item",
            "minecraft:enter_block",
            "minecraft:entity_hurt_player",
            "minecraft:entity_killed_player",
            "minecraft:filled_bucket",
            "minecraft:fishing_rod_hooked",
            "minecraft:hero_of_the_village",
            "minecraft:impossible",
            "minecraft:inventory_changed",
            "minecraft:item_durability_changed",
            "minecraft:killed_by_crossbow",
            "minecraft:levitation",
            "minecraft:location",
            "minecraft:nether_travel",
            "minecraft:placed_block",
            "minecraft:player_hurt_entity",
            "minecraft:player_killed_entity",
            "minecraft:recipe_unlocked",
            "minecraft:safely_harvest_honey",
            "minecraft:shot_crossbow",
            "minecraft:slept_in_bed",
            "minecraft:slide_down_block",
            "minecraft:summoned_entity",
            "minecraft:tame_animal",
            "minecraft:target_hit",
            "minecraft:tick",
            "minecraft:used_ender_eye",
            "minecraft:used_totem",
            "minecraft:villager_trade",
            "minecraft:voluntary_exile"
          ]
        },
        "block": {
          "type": "string",
          "$ref": "#/definitions/namespace"
        }
      }
    },
    "prop-rewards": {
      "type": "object",
      "properties": {
        "recipes": {
          "type": "array",
          "minItem": 1,
          "items": {
            "type": "string",
            "$ref": "#/definitions/namespace"
          }
        },
        "loot": {
          "type": "array",
          "minItem": 1,
          "items": {
            "type": "string",
            "$ref": "#/definitions/namespace"
          }
        },
        "experience": {
          "type": "number"
        },
        "function": {
          "type": "string",
          "$ref": "#/definitions/namespace"
        }
      }
    },
    "chatcomponent": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "translate": {
          "type": "string"
        },
        "with": {
          "type": "array",
          "minItems": 1
        },
        "score": {
          "type": "object",
          "$ref": "#/definitions/sbobjective"
        },
        "selector": {
          "type": "string"
        },
        "keybind": {
          "type": "string"
        },
        "nbt": {
          "type": "string"
        },
        "interpret": {
          "type": "boolean",
          "enum": [true, false]
        },
        "block": {
          "type": "string"
        },
        "entity": {
          "type": "string"
        },
        "storage": {
          "type": "string"
        },
        "color": {
          "type": "string",
          "enum": [
            "black",
            "dark_blue",
            "dark_green",
            "dark_aqua",
            "dark_red",
            "dark_purple",
            "gold",
            "gray",
            "dark_gray",
            "blue",
            "green",
            "aqua",
            "red",
            "light_purple",
            "yellow",
            "white",
            "reset",
            "bold",
            "italic",
            "underlined",
            "strikethrough",
            "obfuscated"
          ]
        },
        "bold": {
          "type": "boolean",
          "enum": [true, false],
          "default": false
        },
        "italic": {
          "type": "boolean",
          "enum": [true, false],
          "default": false
        },
        "underlined": {
          "type": "boolean",
          "enum": [true, false],
          "default": false
        },
        "strikethrough": {
          "type": "boolean",
          "enum": [true, false],
          "default": false
        },
        "obfuscated": {
          "type": "boolean",
          "enum": [true, false],
          "default": false
        },
        "insertion": {
          "type": "string"
        },
        "clickEvent": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "enum": [
                "open_url",
                "open_file",
                "run_command",
                "change_page",
                "suggest_command",
                "copy_to_clipboard"
              ]
            },
            "value": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^/.*$"
                },
                {
                  "type": "string",
                  "$schema": "url"
                },
                {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 50
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "hoverEvent": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "enum": [
                "show_text",
                "show_item",
                "show_entity"
              ]
            },
            "value": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object"
                }
              ]
            }
          }
        },
        "extra": {
          "type": "array"
        }
      }
    },
    "namespace": {
      "type": "string",
      "pattern": "^[a-z\\d_-]+(:([a-z\\d_-]+)?(/[a-z\\d_-]+)*)?(\\.[a-z\\d_-]+)?$"
    },
    "sbobjective": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^(\\*|[A-Za-z\\d_]{3,16})$"
        },
        "objective": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      },
      "required": [
        "name",
        "objective"
      ]
    }
  },
  "properties": {
    "display": {
      "description": "information about advancement",
      "type": "object",
      "$ref": "#/definitions/prop-display"
    },
    "parent": {
      "description": "base advancements",
      "type": "string",
      "$ref": "#/definitions/namespace"
    },
    "criteria": {
      "description": "conditions for this advancement",
      "type": "object",
      "$ref": "#/definitions/prop-criteria"
    },
    "requirements": {
      "description": "which conditions are required to get the advancement",
      "type": "array",
      "minItem": 1,
      "uniqueItems": true
    },
    "rewards": {
      "description": "reward(s) will be given to player when they met condition defined in criteria",
      "type": "object",
      "$ref": "#/definitions/prop-rewards"
    }
  }
}
